{
  "version": 2,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 20,
    "patch": 0
  },
  "configurePresets": [
    {
      "name": "default",
      "displayName": "Default Config",
      "description": "Default build using",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/build/${presetName}",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug",
        "BUILD_SHARED_LIBS": true,
        "BUILD_TESTS": true
      }
    },
    {
      "name": "sanitized",
      "inherits": "default",
      "displayName": "sanitized",
      "hidden": true,
      "description": "Shared flags for the sanitized build - do not use directly",
      "environment": {
        "SANITIZER_FLAGS": "-fPIC -g -fno-omit-frame-pointer -fno-optimize-sibling-calls"
      }
    },
    {
      "name": "asan",
      "inherits": "sanitized",
      "displayName": "asan",
      "description": "Address Sanitizer",
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "$env{SANITIZER_FLAGS} -fsanitize=address"
      }
    },
    {
      "name": "msan",
      "inherits": "sanitized",
      "displayName": "msan",
      "description": "Memory Sanitizer",
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "$env{SANITIZER_FLAGS} -fsanitize=memory"
      }
    },
    {
      "name": "tsan",
      "inherits": "sanitized",
      "displayName": "tsan",
      "description": "Thread Sanitizer",
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "$env{SANITIZER_FLAGS} -fsanitize=thread"
      }
    },
    {
      "name": "no-reflection",
      "inherits": "default",
      "description": "Without Boost PFR",
      "cacheVariables": {
        "CBOR_WITH_BOOST_PFR": false
      }
    },
    {
      "name": "gcc-coverage",
      "inherits": "default",
      "description": "GCC-based coverage",
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "--coverage",
        "CMAKE_C_FLAGS": "--coverage"
      }
    },
    {
      "name": "clang-coverage",
      "inherits": "default",
      "description": "CLang-based coverage",
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": "-fprofile-instr-generate -fcoverage-mapping",
        "CMAKE_C_FLAGS": "-fprofile-instr-generate -fcoverage-mapping"
      }
    }
  ],
  "buildPresets": [
    {
      "name": "default",
      "configurePreset": "default"
    },
    {
      "name": "asan",
      "configurePreset": "asan"
    },
    {
      "name": "msan",
      "configurePreset": "msan"
    },
    {
      "name": "tsan",
      "configurePreset": "tsan"
    },
    {
      "name": "no-reflection",
      "configurePreset": "no-reflection"
    },
    {
      "name": "gcc-coverage",
      "configurePreset": "gcc-coverage"
    },
    {
      "name": "clang-coverage",
      "configurePreset": "clang-coverage"
    }
  ],
  "testPresets": [
    {
      "name": "default",
      "configurePreset": "default",
      "output": {"outputOnFailure": true},
      "filter": { "include": {"name":  "CBORTests"} },
      "execution": {"noTestsAction": "error", "stopOnFailure": true}
    },
    {
      "name": "asan",
      "inherits": "default",
      "configurePreset": "asan"
    },
    {
      "name": "msan",
      "inherits": "default",
      "configurePreset": "msan"
    },
    {
      "name": "tsan",
      "inherits": "default",
      "configurePreset": "tsan"
    },
    {
      "name": "no-reflection",
      "inherits": "default",
      "configurePreset": "no-reflection"
    },
    {
      "name": "gcc-coverage",
      "inherits": "default",
      "configurePreset": "gcc-coverage"
    },
    {
      "name": "clang-coverage",
      "inherits": "default",
      "configurePreset": "clang-coverage"
    }
  ]
}